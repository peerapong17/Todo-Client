{"version":3,"sources":["states/action-types/auth.ts","pages/todo/styles.js","components/todoForm/styles.js","http-request/http.ts","http-request/auth.ts","states/action-types/todo.ts","http-request/pass.ts","http-request/todo.ts","states/action-creators/auth.ts","states/action-creators/todo.ts","states/action-types/pass.ts","states/action-creators/pass.ts","states/useActions/useTodoAction.ts","components/todoForm/todoForm.tsx","states/useActions/useAuthAction.ts","components/todoList/styles.js","components/todoList/todoList.tsx","components/navbar/Navbar.tsx","pages/todo/todo.tsx","pages/enter-email/styles.js","states/useActions/usePassAction.ts","pages/enter-email/EnterEmail.tsx","route/PrivateRoute.tsx","pages/login/styles.js","assets/images/google.jpg","validators/value/index.ts","validators/schema/loginSchema.ts","pages/login/login.tsx","pages/register/styles.js","validators/schema/registerSchema.ts","pages/register/register.tsx","pages/enter-new-password/styles.js","pages/enter-new-password/EnterNewPassword.tsx","App.tsx","reportWebVitals.ts","states/reducers/todos.ts","states/reducers/auth.ts","states/reducers/password.ts","states/reducers/index.ts","states/store.ts","index.tsx"],"names":["AuthActionTypes","useStyles","makeStyles","container","height","width","title","flexGrow","gridContainer","marginTop","circular","marginLeft","noTask","display","justifyContent","fontWeight","card","padding","alignItems","textField","http","axios","create","baseURL","process","headers","interceptors","request","use","res","localStorage","getItem","Authorization","JSON","parse","TodoActionTypes","loginUser","value","method","data","withCredentials","url","createUser","enterEmail","enterNewPassword","userId","token","fetchData","a","createTodo","updateTodo","id","deleteTodo","navigate","dispatch","console","log","type","LOADING","setItem","stringify","accessToken","LOG_IN_SUCCESS","setTimeout","response","ERROR","payload","REGISTER_SUCCESS","message","fetchProfile","FETCH_PROFILE","username","logoutUser","LOG_OUT","clear","PassActionTypes","status","todoList","FETCH_DATA_SUCCESS","Error","CREATE_TODO","UPDATE_TODO","DELETE_TODO","SUCCESS","CLEAR","useTodoAction","useDispatch","bindActionCreators","TodoActionCreators","TodoForm","classes","React","useState","task","setTask","Card","className","TextField","variant","placeholder","name","InputProps","disableUnderline","onChange","e","target","Button","onClick","trim","color","useAuthAction","AuthActionCreators","resize","fontSize","flex","btnContainer","TodoList","isCompleted","createdAt","todo","setTodo","isEditting","setIsEditting","Fragment","Checkbox","checked","prev","input","autoFocus","Typography","moment","fromNow","style","marginRight","backgroundColor","Navbar","setOpen","useSelector","state","auth","AppBar","position","Toolbar","endIcon","TodoMain","useNavigate","Date","toISOString","split","selectedDate","setSelectedDate","todos","isLoading","error","open","useEffect","handleClose","dataListener","length","filter","Container","Grid","spacing","item","xs","md","CircularProgress","map","i","label","defaultValue","toDateString","handleDateChange","InputLabelProps","shrink","Snackbar","autoHideDuration","onClose","Alert","severity","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","form","flexDirection","boxShadow","borderRadius","marginBottom","text","textAlign","login","textDecoration","button","usePassAction","PassActionCreators","props","elevation","EnterEmail","pass","success","formik","useFormik","initialValues","email","validationSchema","yup","required","onSubmit","sm","handleSubmit","values","handleChange","touched","errors","helperText","to","size","disabled","PrivateRoute","useParams","isAuthenticated","grid","regisOrResetLink","googleBtn","resetOrRegisLinkContainer","loginState","password","registerState","confirmPassword","loginValidationSchema","Login","loading","googleLogin","window","src","google","alt","loginLink","registerValidationSchema","matches","min","oneOf","Register","resetPass","App","path","element","EnterNewPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70304d57.chunk.js","sourcesContent":["export enum AuthActionTypes {\r\n  LOADING = \"AUTH_LOADING\",\r\n  LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\",\r\n  REGISTER_SUCCESS = \"REGISTER_SUCCESS\",\r\n  FETCH_PROFILE = \"FETCH_PROFILE\",\r\n  LOG_OUT = \"LOG_OUT\",\r\n  ERROR = \"AUTH_ERROR\",\r\n  CLEAR = \"CLEAR_AUTH_ERROR\"\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport const useStyles = makeStyles({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  gridContainer: {\r\n    marginTop: \"20px\",\r\n  },\r\n  circular: {\r\n    marginLeft: \"50%\",\r\n    marginTop: \"70px\",\r\n  },\r\n  noTask: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"70px\",\r\n    fontWeight: \"600\"\r\n  },\r\n});\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  card: {\r\n    padding: \"7px 13px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  textField: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n","import axios from \"axios\";\r\n\r\nexport const http = axios.create({\r\n  baseURL: process.env.REACT_APP_API,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nhttp.interceptors.request.use((res) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    res.headers!.Authorization =\r\n      \"Bearer \" + JSON.parse(localStorage.getItem(\"token\")!);\r\n  }\r\n\r\n  return res;\r\n});\r\n","import { http } from './http';\r\nimport { AxiosResponse } from \"axios\";\r\n\r\n\r\nexport const loginUser = (value: {\r\n  username: string;\r\n  password: string;\r\n}): Promise<\r\n  AxiosResponse<{\r\n    message: string;\r\n    accessToken: string;\r\n    authenticated: boolean;\r\n  }>\r\n> =>\r\n  http.request<{\r\n    message: string;\r\n    accessToken: string;\r\n    authenticated: boolean;\r\n  }>({\r\n    method: \"POST\",\r\n    data: value,\r\n    withCredentials: true,\r\n    url: \"/auth/login\",\r\n  });\r\n\r\nexport const createUser = (value: {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n}): Promise<\r\n  AxiosResponse<{\r\n    message: string;\r\n  }>\r\n> =>\r\n  http.request<{ message: string }>({\r\n    method: \"POST\",\r\n    data: value,\r\n    url: \"/auth/register\",\r\n  });\r\n\r\nexport const fetchProfile = (): Promise<\r\n  AxiosResponse<{\r\n    username: string;\r\n  }>\r\n> =>\r\n  http.request<{ username: string }>({\r\n    method: \"GET\",\r\n    url: \"/auth/user-profile\",\r\n  });\r\n\r\nexport const logoutUser = (): Promise<\r\n  AxiosResponse<{\r\n    message: string;\r\n  }>\r\n> =>\r\n  http.request<{ message: string }>({\r\n    method: \"GET\",\r\n    url: \"/auth/logout\",\r\n  });\r\n","export enum TodoActionTypes {\r\n    LOADING = \"TODO_LOADING\",\r\n    FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\",\r\n    CREATE_TODO = \"CREATE_TODO\",\r\n    UPDATE_TODO = \"UPDATE_TODO\",\r\n    DELETE_TODO = \"DELETE_TODO\",\r\n    TOGGLE_TODO = \"TOGGLE_TODO\",\r\n    ERROR = \"TODO_ERROR\",\r\n    CLEAR = \"CLEAR_TODO_ERROR\"\r\n}\r\n","import { http } from './http';\r\nimport { AxiosResponse } from \"axios\";\r\n\r\nexport const enterEmail = (value: {\r\n  email: string;\r\n}): Promise<\r\n  AxiosResponse<{\r\n    message: string;\r\n  }>\r\n> =>\r\n  http.request<{ message: string }>({\r\n    data: value,\r\n    url: \"/enter-email\",\r\n  });\r\n\r\nexport const enterNewPassword = (\r\n  value: { password: string },\r\n  userId: string,\r\n  token: string\r\n): Promise<\r\n  AxiosResponse<{\r\n    message: string;\r\n  }>\r\n> =>\r\n  http.request<{ message: string }>({\r\n    data: value,\r\n    url: `/enter-new-password/${userId}/${token}`,\r\n  });\r\n","import { http } from \"./http\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { Todo } from \"../states/models/todo\";\r\n\r\nexport const fetchData = async (): Promise<\r\n  AxiosResponse<{ todoList: Todo[] }>\r\n> =>\r\n  await http.request<{ todoList: Todo[] }>({\r\n    method: \"GET\",\r\n    url: \"/todo\",\r\n  });\r\n\r\nexport const createTodo = (value: {\r\n  task: string;\r\n}): Promise<\r\n  AxiosResponse<{\r\n    data: Todo;\r\n  }>\r\n> =>\r\n  http.request<{ data: Todo }>({\r\n    method: \"POST\",\r\n    data: value,\r\n    url: \"/todo/create\",\r\n  });\r\n\r\nexport const updateTodo = (\r\n  id: string,\r\n  value: { task: string; isCompleted: boolean }\r\n): Promise<\r\n  AxiosResponse<{\r\n    data: Todo;\r\n  }>\r\n> =>\r\n  http.request<{ data: Todo }>({\r\n    method: \"PUT\",\r\n    data: value,\r\n    url: `/todo/update/${id}`,\r\n  });\r\n\r\nexport const deleteTodo = (id: string): Promise<AxiosResponse<string>> =>\r\n  http.request<string>({\r\n    method: \"DELETE\",\r\n    url: `/todo/delete/${id}`,\r\n  });\r\n","import { AuthAction } from \"../actions/auth\";\r\nimport { Dispatch } from \"redux\";\r\nimport { AuthActionTypes } from \"../action-types/auth\";\r\nimport * as http from \"../../http-request\";\r\n\r\nexport const loginUser = (\r\n  value: { username: string; password: string },\r\n  navigate: any\r\n) => {\r\n  return async (dispatch: Dispatch<AuthAction>) => {\r\n    console.log(\"object\");\r\n    dispatch({\r\n      type: AuthActionTypes.LOADING,\r\n    });\r\n    try {\r\n      const { data } = await http.loginUser(value);\r\n      localStorage.setItem(\"token\", JSON.stringify(data.accessToken));\r\n      dispatch({\r\n        type: AuthActionTypes.LOG_IN_SUCCESS,\r\n      });\r\n      setTimeout(() => {\r\n        navigate(\"/todo\");\r\n      }, 1000);\r\n    } catch (error) {\r\n      if (error?.response && error.response.data) {\r\n        dispatch({\r\n          type: AuthActionTypes.ERROR,\r\n          payload: error.response.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: AuthActionTypes.ERROR,\r\n          payload: \"Something went wrong\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const createUser = (\r\n  value: {\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n  },\r\n  navigate: any\r\n) => {\r\n  return async (dispatch: Dispatch<AuthAction>) => {\r\n    dispatch({\r\n      type: AuthActionTypes.LOADING,\r\n    });\r\n    try {\r\n      const { data } = await http.createUser(value);\r\n      dispatch({\r\n        type: AuthActionTypes.REGISTER_SUCCESS,\r\n        payload: data.message,\r\n      });\r\n      setTimeout(() => {\r\n        navigate(\"/login\");\r\n        dispatch({\r\n          type: AuthActionTypes.REGISTER_SUCCESS,\r\n          payload: \"\",\r\n        });\r\n      }, 4000);\r\n    } catch (error) {\r\n      console.log(error)\r\n      if (error?.response && error.response.data) {\r\n        dispatch({\r\n          type: AuthActionTypes.ERROR,\r\n          payload: error.response.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: AuthActionTypes.ERROR,\r\n          payload: \"Something went wrong\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchProfile = () => {\r\n  return async (dispatch: Dispatch<AuthAction>) => {\r\n    try {\r\n      const { data } = await http.fetchProfile();\r\n\r\n      console.log(data)\r\n\r\n      dispatch({\r\n        type: AuthActionTypes.FETCH_PROFILE,\r\n        payload: data.username,\r\n      });\r\n    } catch (error) {\r\n      console.log(error)\r\n      if (error?.response && error.response.data) {\r\n        dispatch({\r\n          type: AuthActionTypes.ERROR,\r\n          payload: error.response.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: AuthActionTypes.ERROR,\r\n          payload: \"Something went wrong\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const logoutUser =\r\n  (navigate: any) => async (dispatch: Dispatch<AuthAction>) => {\r\n    await http.logoutUser();\r\n    dispatch({\r\n      type: AuthActionTypes.LOG_OUT,\r\n    });\r\n    localStorage.clear();\r\n    navigate(\"/login\");\r\n  };\r\n\r\n// export const enterEmail =\r\n//   (email: string, navigate: any) => async (dispatch: Dispatch<AuthAction>) => {\r\n//     await http.enterEmail();\r\n//   };\r\n","import { TodoActionTypes } from \"../action-types/todo\";\r\nimport { Dispatch } from \"redux\";\r\nimport * as http from \"../../http-request\";\r\nimport { TodoAction } from \"../actions/todo\";\r\n\r\nexport const fetchData =\r\n  () =>\r\n  async (dispatch: Dispatch<TodoAction>): Promise<void> => {\r\n    dispatch({\r\n      type: TodoActionTypes.LOADING,\r\n    });\r\n    try {\r\n      const { data, status } = await http.fetchData();\r\n      if (status >= 200 && status < 300) {\r\n        console.log(data.todoList)\r\n\r\n        dispatch({\r\n          type: TodoActionTypes.FETCH_DATA_SUCCESS,\r\n          payload: data.todoList,\r\n        });\r\n      } else {\r\n        throw new Error(\"Could not fetch the data\");\r\n      }\r\n    } catch (error) {\r\n      dispatch({\r\n        type: TodoActionTypes.ERROR,\r\n        payload: \"Could not fetch the data\",\r\n      });\r\n    }\r\n  };\r\n\r\nexport const createTodo =\r\n  (value: { task: string }) => async (dispatch: Dispatch<TodoAction>) => {\r\n    console.log(value)\r\n    try {\r\n      const { data } = await http.createTodo(value);\r\n      console.log(data)\r\n      dispatch({\r\n        type: TodoActionTypes.CREATE_TODO,\r\n        payload: data.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: TodoActionTypes.ERROR,\r\n        payload: error.response.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateTodo =\r\n  (id: string, value: { task: string; isCompleted: boolean }) =>\r\n  async (dispatch: Dispatch<TodoAction>) => {\r\n    try {\r\n      dispatch({\r\n        type: TodoActionTypes.UPDATE_TODO,\r\n        id: id,\r\n        payload: value,\r\n      });\r\n      await http.updateTodo(id, value);\r\n    } catch (error) {\r\n      dispatch({\r\n        type: TodoActionTypes.ERROR,\r\n        payload: \"An error occured\",\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteTodo =\r\n  (id: string) => async (dispatch: Dispatch<TodoAction>) => {\r\n    try {\r\n      dispatch({\r\n        type: TodoActionTypes.DELETE_TODO,\r\n        payload: id,\r\n      });\r\n      await http.deleteTodo(id);\r\n    } catch (error) {\r\n      dispatch({\r\n        type: TodoActionTypes.ERROR,\r\n        payload: error.response.message,\r\n      });\r\n    }\r\n  };\r\n","export enum PassActionTypes {\r\n  CLEAR = \"CLEAR_PASSWORD_ERROR\",\r\n  ERROR = \"PASSWORD_ERROR\",\r\n  SUCCESS = \"SUCCESS\",\r\n  LOADING = \"PASSWORD_LOADING\",\r\n}\r\n","import * as http from \"../../http-request\";\r\nimport { Dispatch } from \"redux\";\r\nimport { PassAction } from \"../actions/pass\";\r\nimport { PassActionTypes } from \"../action-types/pass\";\r\n\r\nexport const enterEmail = (value: { email: string }) => {\r\n  return async (dispatch: Dispatch<PassAction>): Promise<void> => {\r\n    dispatch({\r\n      type: PassActionTypes.LOADING,\r\n    });\r\n    try {\r\n      const { data } = await http.enterEmail(value);\r\n      dispatch({\r\n        type: PassActionTypes.SUCCESS,\r\n        payload: data.message,\r\n      });\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: PassActionTypes.CLEAR,\r\n        });\r\n      }, 7000);\r\n    } catch (error) {\r\n      if (error.response.data && error.response.data.message) {\r\n        dispatch({\r\n          type: PassActionTypes.ERROR,\r\n          payload: error.response.data.message,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: PassActionTypes.ERROR,\r\n          payload: \"Something went wrong\",\r\n        });\r\n      }\r\n      // dispatch({\r\n      //   type: PassActionTypes.ERROR,\r\n      //   payload: \"Something went wrong, Could not send reset-password-link to your email\",\r\n      // });\r\n    }\r\n  };\r\n};\r\n\r\nexport const enterNewPassword = (\r\n  value: { password: string },\r\n  userId: string,\r\n  token: string,\r\n  navigate: any\r\n) => {\r\n  return async (dispatch: Dispatch<PassAction>): Promise<void> => {\r\n    dispatch({\r\n      type: PassActionTypes.LOADING,\r\n    });\r\n    try {\r\n      const { data } = await http.enterNewPassword(value, userId, token);\r\n      dispatch({\r\n        type: PassActionTypes.SUCCESS,\r\n        payload: data.message,\r\n      });\r\n      setTimeout(() => {\r\n        navigate(\"/login\");\r\n        dispatch({\r\n          type: PassActionTypes.CLEAR,\r\n        });\r\n      }, 3000);\r\n    } catch (error) {\r\n      const { message } = error.response.data;\r\n      if (message) {\r\n        dispatch({\r\n          type: PassActionTypes.ERROR,\r\n          payload: message,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: PassActionTypes.ERROR,\r\n          payload: \"Something went wrong\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {TodoActionCreators} from '..'\r\n\r\nexport const useTodoAction = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return bindActionCreators(TodoActionCreators, dispatch);\r\n};","import React from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useStyles } from \"./styles\";\r\nimport { Button, Card, TextField } from \"@material-ui/core\";\r\nimport { useTodoAction } from \"../../states/useActions/useTodoAction\";\r\n\r\nconst TodoForm: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { createTodo } = useTodoAction();\r\n  const [task, setTask] = React.useState<string>(\"\");\r\n\r\n  const onClick = () => {\r\n    if (task.trim() !== \"\") {\r\n      createTodo({ task });\r\n      setTask(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"standard\"\r\n        placeholder=\"Todooo....\"\r\n        value={task}\r\n        name=\"task\"\r\n        InputProps={{ disableUnderline: true }}\r\n        onChange={(e) => {\r\n          setTask(e.target.value);\r\n        }}\r\n      />\r\n      <Button\r\n        type=\"button\"\r\n        onClick={onClick}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n      >\r\n        <AddIcon />\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {AuthActionCreators} from '..'\r\n\r\nexport const useAuthAction = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return bindActionCreators(AuthActionCreators, dispatch);\r\n};","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport const useStyles = makeStyles({\r\n  card: {\r\n    marginTop: \"15px\",\r\n    display: \"flex\",\r\n    padding: \"15px\",\r\n    alignItems: \"center\",\r\n  },\r\n  resize: {\r\n    fontSize: 24,\r\n  },\r\n  task: {\r\n    flex: 1,\r\n  },\r\n  btnContainer: {\r\n    display: \"flex\"\r\n  },\r\n});\r\n","import {\r\n  Button,\r\n  Card,\r\n  Checkbox,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useTodoAction } from \"../../states/useActions/useTodoAction\";\r\nimport moment from 'moment'\r\n\r\nconst TodoList: React.FC<{ task: string; id: string; isCompleted: boolean, createdAt:string }> =\r\n  ({ task, id, isCompleted, createdAt }) => {\r\n    const classes = useStyles();\r\n    const { deleteTodo, updateTodo } = useTodoAction();\r\n    const [todo, setTodo] = React.useState<{\r\n      task: string;\r\n      isCompleted: boolean;\r\n    }>({\r\n      task,\r\n      isCompleted,\r\n    });\r\n    const [isEditting, setIsEditting] = React.useState<boolean>(false);\r\n\r\n    const onEdit = () => {\r\n      updateTodo(id, { task: todo.task, isCompleted: todo.isCompleted });\r\n    };\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const { name, value } = e.target;\r\n      setTodo((prev) => {\r\n        return {\r\n          ...prev,\r\n          [name]: value,\r\n        };\r\n      });\r\n    };\r\n\r\n    const onToggle = () => {\r\n      updateTodo(id, { task: todo.task, isCompleted: !todo.isCompleted });\r\n      setTodo((prev) => {\r\n        return {\r\n          ...prev,\r\n          isCompleted: !todo.isCompleted,\r\n        };\r\n      });\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card className={classes.card}>\r\n          <Checkbox checked={todo.isCompleted} onChange={onToggle} />\r\n          {isEditting ? (\r\n            <TextField\r\n              name=\"task\"\r\n              value={todo.task}\r\n              variant=\"standard\"\r\n              onChange={onChange}\r\n              InputProps={{\r\n                disableUnderline: true,\r\n                classes: {\r\n                  input: classes.resize,\r\n                },\r\n              }}\r\n              autoFocus\r\n            />\r\n          ) : (\r\n            <div className={classes.task}>\r\n              <Typography variant=\"h5\">{task}</Typography>\r\n              <Typography variant=\"caption\">{moment(createdAt).fromNow()}</Typography>\r\n            </div>\r\n          )}\r\n          {isEditting && (\r\n            <div className={classes.btnContainer}>\r\n              <Button\r\n                style={{ marginRight: \"4px\", backgroundColor: \"#99ffb4\" }}\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setIsEditting(!isEditting);\r\n                  onEdit();\r\n                }}\r\n              >\r\n                <CheckIcon />\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  setIsEditting(!isEditting);\r\n                  setTodo({ task, isCompleted });\r\n                }}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n              >\r\n                <CloseIcon />\r\n              </Button>\r\n            </div>\r\n          )}\r\n\r\n          {!isEditting && (\r\n            <div className={classes.btnContainer}>\r\n              <Button\r\n                style={{ marginRight: \"4px\" }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setIsEditting(!isEditting)}\r\n              >\r\n                <EditIcon />\r\n              </Button>\r\n              <Button\r\n                onClick={() => deleteTodo(id)}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n              >\r\n                <DeleteIcon />\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { AppBar, Button, Toolbar, Typography } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../states/reducers\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst Navbar = ({\r\n  setOpen,\r\n}: {\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}) => {\r\n  const classes = useStyles();\r\n  const { username } = useSelector((state: RootState) => state.auth);\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Todo {username}\r\n        </Typography>\r\n        <Button\r\n          onClick={() => setOpen(true)}\r\n          variant=\"outlined\"\r\n          endIcon={<ExitToAppIcon />}\r\n          color=\"secondary\"\r\n        >\r\n          Logout\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  Snackbar,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\nimport TodoForm from \"../../components/todoForm/todoForm\";\r\nimport { useTodoAction } from \"../../states/useActions/useTodoAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../../states/reducers\";\r\nimport { useAuthAction } from \"../../states/useActions/useAuthAction\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Todo } from \"../../states/models/todo\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { TodoActionTypes } from \"../../states/action-types/todo\";\r\nimport TodoList from \"../../components/todoList/todoList\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\n\r\nconst TodoMain: React.FC = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { logoutUser } = useAuthAction();\r\n  const { fetchData } = useTodoAction();\r\n  const [selectedDate, setSelectedDate] = React.useState<string>(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const { isLoading, todoList, error } = useSelector(\r\n    (state: RootState) => state.todos\r\n  );\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    dispatch({\r\n      type: TodoActionTypes.CLEAR,\r\n    });\r\n  };\r\n\r\n  const handleDateChange = (\r\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    console.log(typeof new Date().toISOString());\r\n    console.log(new Date().toISOString().split(\"T\")[0]);\r\n    console.log(e.target.value);\r\n    console.log(e.target.value === new Date().toISOString().split(\"T\")[0]);\r\n    todoList.map((todo) => {\r\n      console.log(todo.createdAt.split(\"T\")[0]);\r\n      console.log(new Date(todo.createdAt).toDateString());\r\n    });\r\n    setSelectedDate(e.target.value);\r\n  };\r\n\r\n  const dataListener = (): Todo[] => {\r\n    if (todoList.length > 0) {\r\n      return [...todoList].filter((todo) => {\r\n        return todo.createdAt.split(\"T\")[0] == selectedDate;\r\n      });\r\n    } else {\r\n      return [] as Todo[];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar setOpen={setOpen}  />\r\n      <Container className={classes.container}>\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          className={classes.gridContainer}\r\n          spacing={6}\r\n        >\r\n          <Grid item xs={7} md={4}>\r\n            <TodoForm />\r\n            {isLoading ? (\r\n              <CircularProgress\r\n                color=\"secondary\"\r\n                className={classes.circular}\r\n              />\r\n            ) : dataListener() && dataListener().length > 0 ? (\r\n              dataListener().map((data, i) => {\r\n                return <TodoList key={i} {...data} />;\r\n              })\r\n            ) : (\r\n              <Typography className={classes.noTask} variant=\"h4\">\r\n                No Task To Do...\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={7} md={4}>\r\n            <TextField\r\n              id=\"date\"\r\n              label=\"Birthday\"\r\n              type=\"date\"\r\n              defaultValue={new Date().toISOString().split(\"T\")[0]}\r\n              onChange={(e) => handleDateChange(e)}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          {error && (\r\n            <Snackbar\r\n              open={!!error}\r\n              autoHideDuration={6000}\r\n              onClose={handleClose}\r\n            >\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n              </Alert>\r\n            </Snackbar>\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n      <Dialog open={open}>\r\n        <DialogTitle>{\"Are you sure?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You will be directed to login page\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setOpen(false);\r\n              logoutUser(navigate);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            autoFocus\r\n          >\r\n            Ok\r\n          </Button>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoMain;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    backgroundColor: \"#e8fffe\",\r\n    boxShadow: \"1px 1px 4px #e8e8e8\",\r\n    borderRadius: \"3px\",\r\n  },\r\n  textField: {\r\n    marginBottom: \"23px\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    marginBottom: \"27px\",\r\n  },\r\n  login: {\r\n    textAlign: \"end\",\r\n    marginBottom: \"12px\",\r\n    color: \"black\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n      color: \"blue\",\r\n    },\r\n  },\r\n  button: {\r\n    backgroundColor: \"#91ff5e\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"700\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#64ff24\",\r\n    },\r\n  },\r\n});\r\n\r\nexport { useStyles };\r\n","import { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { PassActionCreators } from \"..\";\r\n\r\nexport const usePassAction = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return bindActionCreators(PassActionCreators, dispatch);\r\n};\r\n","/* eslint-disable react/no-unescaped-entities */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Snackbar,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\nimport { useFormik } from \"formik\";\r\nimport { RootState } from \"../../states/reducers/index\";\r\nimport { PassActionTypes } from \"../../states/index\";\r\nimport { useStyles } from \"./styles\";\r\nimport * as yup from \"yup\";\r\nimport { usePassAction } from \"../../states/useActions/usePassAction\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst EnterEmail: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { error, success, isLoading } = useSelector(\r\n    (state: RootState) => state.pass\r\n  );\r\n  const { enterEmail } = usePassAction();\r\n  const dispatch = useDispatch();\r\n  const formik = useFormik({\r\n    initialValues: { email: \"\" },\r\n    validationSchema: yup.object({\r\n      email: yup\r\n        .string()\r\n        .email(\"Invalid email address\")\r\n        .required(\"Email is Required\"),\r\n    }),\r\n    onSubmit: ({ email }) => {\r\n      enterEmail({ email });\r\n    },\r\n  });\r\n\r\n  const handleClose = () => {\r\n    dispatch({\r\n      type: PassActionTypes.PassActionTypes.CLEAR,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Grid container justifyContent=\"center\">\r\n        <Grid item xs={8} sm={6} md={4}>\r\n          <form onSubmit={formik.handleSubmit} className={classes.form}>\r\n            <h1 className={classes.text}>Send Email</h1>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              value={formik.values.email}\r\n              name=\"email\"\r\n              onChange={formik.handleChange}\r\n              className={classes.textField}\r\n              error={formik.touched.email && !!formik.errors.email}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n            <Link style={{ textDecoration: \"none\" }} to=\"/login\">\r\n              <Typography className={classes.login}>Login?</Typography>\r\n            </Link>\r\n            <Button\r\n              className={classes.button}\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              disabled={isLoading ? true : false}\r\n            >\r\n              {isLoading ? \"Loading...\" : \"Send\"}\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        {error && (\r\n          <Snackbar\r\n            open={!!error}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n              {error}\r\n            </Alert>\r\n          </Snackbar>\r\n        )}\r\n        {success && (\r\n          <Snackbar\r\n            open={!!success}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              {success}\r\n            </Alert>\r\n          </Snackbar>\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EnterEmail;\r\n","import React from \"react\";\r\nimport { Outlet, Navigate, useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../states/reducers\";\r\nimport { useAuthAction } from \"../states/useActions/useAuthAction\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AuthActionTypes } from \"../states\";\r\n\r\nexport const PrivateRoute = () => {\r\n  const dispatch = useDispatch();\r\n  const { fetchProfile } = useAuthAction();\r\n  const { accessToken } = useParams() as { accessToken: string };\r\n  const { isAuthenticated, username, error } = useSelector(\r\n    (state: RootState) => state.auth\r\n  );\r\n\r\n  console.log(\"before useEffect\");\r\n\r\n  React.useEffect(() => {\r\n    dispatch({\r\n      type: AuthActionTypes.AuthActionTypes.LOADING,\r\n    });\r\n\r\n    if (accessToken) {\r\n      localStorage.setItem(\"token\", JSON.stringify(accessToken));\r\n    }\r\n\r\n    console.log(\"inside useEffect\");\r\n\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  if (error) return <Navigate to=\"/login\" />;\r\n\r\n  if (!username)\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <CircularProgress color=\"secondary\" />\r\n      </div>\r\n    );\r\n\r\n\r\n  console.log(\"outside useEffect\");\r\n\r\n  return isAuthenticated && username ? <Outlet /> : <Navigate to=\"/login\" />;\r\n};\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    backgroundColor: \"#e6ffd1\",\r\n    boxShadow: \"1px 1px 4px #e8e8e8\",\r\n    borderRadius: \"3px\",\r\n  },\r\n  textField: {\r\n    marginBottom: \"23px\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    marginBottom: \"27px\",\r\n  },\r\n  regisOrResetLink: {\r\n    textAlign: \"end\",\r\n    marginBottom: \"12px\",\r\n    color: \"black\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n      color: \"blue\",\r\n    },\r\n  },\r\n  button: {\r\n    backgroundColor: \"#91ff5e\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"700\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#64ff24\",\r\n    },\r\n  },\r\n  googleBtn: {\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#ffffff\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"700\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fcfcfc\",\r\n    },\r\n  },\r\n  resetOrRegisLinkContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n\r\nexport { useStyles };\r\n","export default __webpack_public_path__ + \"static/media/google.221f782d.jpg\";","import { UserLogin, UserRegister } from \"../model\";\r\n\r\nexport const loginState: UserLogin = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport const registerState: UserRegister = {\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n","import * as yup from \"yup\";\r\n\r\nexport const loginValidationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .required(\"Email is Required\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\"),\r\n});\r\n","/* eslint-disable react/no-unescaped-entities */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Snackbar,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link, useNavigate  } from \"react-router-dom\";\r\nimport { useStyles } from \"./styles.js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\n\r\nimport google from \"../../assets/images/google.jpg\";\r\nimport { useFormik } from \"formik\";\r\nimport { useAuthAction } from \"../../states/useActions/useAuthAction\";\r\nimport { RootState } from \"../../states/reducers/index\";\r\nimport { AuthActionTypes } from \"../../states/index\";\r\nimport { loginState } from \"../../validators/value/index\";\r\nimport { loginValidationSchema } from \"../../validators/schema/loginSchema\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Login: React.FC = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate ();\r\n  const dispatch = useDispatch();\r\n  const { loginUser } = useAuthAction();\r\n  const { error, isLoading: loading } = useSelector(\r\n    (state: RootState) => state.auth\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({\r\n        type: AuthActionTypes.AuthActionTypes.CLEAR,\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    initialValues: loginState,\r\n    validationSchema: loginValidationSchema,\r\n    onSubmit: ({ email, password }) => {\r\n      loginUser({ username: email, password }, navigate);\r\n    },\r\n  });\r\n\r\n  const googleLogin = async () => {\r\n    window.open(\"http://localhost:4000/auth/google\", \"_self\");\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Grid container justifyContent=\"center\">\r\n        <Grid item xs={8} sm={6} md={4}>\r\n          <form onSubmit={formik.handleSubmit} className={classes.form}>\r\n            <h1 className={classes.text}>Login</h1>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              value={formik.values.email}\r\n              name=\"email\"\r\n              onChange={formik.handleChange}\r\n              className={classes.textField}\r\n              error={formik.touched.email && !!formik.errors.email}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              value={formik.values.password}\r\n              name=\"password\"\r\n              onChange={formik.handleChange}\r\n              className={classes.textField}\r\n              error={formik.touched.password && !!formik.errors.password}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n            <div className={classes.resetOrRegisLinkContainer}>\r\n              <Link style={{ textDecoration: \"none\" }} to=\"/register\">\r\n                <Typography className={classes.regisOrResetLink}>\r\n                  Don't have an account?\r\n                </Typography>\r\n              </Link>\r\n              <Link\r\n                style={{ textDecoration: \"none\" }}\r\n                to=\"/reset-password/enter-email\"\r\n              >\r\n                <Typography className={classes.regisOrResetLink}>\r\n                  Forget Password?\r\n                </Typography>\r\n              </Link>\r\n            </div>\r\n            <Button\r\n              className={classes.button}\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              disabled={loading ? true : false}\r\n            >\r\n              {loading ? \"Loading...\" : \"Login\"}\r\n            </Button>\r\n            <Button\r\n              className={classes.googleBtn}\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              onClick={googleLogin}\r\n              disabled={loading ? true : false}\r\n            >\r\n              <img\r\n                src={google}\r\n                alt=\"google\"\r\n                width=\"25\"\r\n                height=\"25\"\r\n                style={{ marginRight: \"10px\" }}\r\n              />\r\n              {loading ? \"Loading...\" : \"Google login\"}\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        {error && (\r\n          <Snackbar\r\n            open={error !== \"\"}\r\n            autoHideDuration={6000}\r\n            onClose={() =>\r\n              dispatch({\r\n                type: AuthActionTypes.AuthActionTypes.CLEAR,\r\n              })\r\n            }\r\n          >\r\n            <Alert\r\n              onClose={() =>\r\n                dispatch({\r\n                  type: AuthActionTypes.AuthActionTypes.CLEAR,\r\n                })\r\n              }\r\n              severity=\"error\"\r\n            >\r\n              {error}\r\n            </Alert>\r\n          </Snackbar>\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    backgroundColor: \"#e8fffe\",\r\n    boxShadow: \"1px 1px 4px #e8e8e8\",\r\n    borderRadius: \"3px\",\r\n  },\r\n  textField: {\r\n    marginBottom: \"23px\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    marginBottom: \"27px\",\r\n  },\r\n  loginLink: {\r\n    textAlign: \"end\",\r\n    marginBottom: \"12px\",\r\n    color: \"black\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n      color: \"blue\",\r\n    },\r\n  },\r\n  button: {\r\n    fontWeight: \"700\",\r\n    fontSize: \"18px\",\r\n  },\r\n});\r\n\r\nexport { useStyles };\r\n","import * as yup from \"yup\";\r\n\r\nexport const registerValidationSchema = yup.object({\r\n  username: yup\r\n    .string()\r\n    .matches(/^[^\\d]+/,\"Username cannot start with number\")\r\n    .matches(/[a-zA-Z]{3,}/g,\"Username should contain at least 3 letters\")\r\n    .matches(/^[a-zA-Z.-\\d\\s_]+$/,\"Username cannot contain special character\")\r\n    .min(4, \"Must be 4 characters or more\")\r\n    .required(\"Username is Required\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"Email is Required\"),\r\n  password: yup\r\n    .string()\r\n    .matches(/[a-zA-Z]/g, \"Password should contain at least 3 letters\")\r\n    .min(6, \"Must be 6 characters or more\")\r\n    .required(\"Password is required\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Confirm-Password is required\"),\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Snackbar,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles.js\";\r\nimport { Link, useNavigate  } from \"react-router-dom\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport { RootState } from \"../../states/reducers/index\";\r\nimport { useAuthAction } from \"../../states/useActions/useAuthAction\";\r\nimport { AuthActionTypes } from \"../../states/index\";\r\nimport { registerState } from \"../../validators/value/index\";\r\nimport { registerValidationSchema } from \"../../validators/schema/registerSchema\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Register: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { error, isLoading, success } = useSelector(\r\n    (state: RootState) => state.auth\r\n  );\r\n  const { createUser } = useAuthAction();\r\n  const classes = useStyles();\r\n  const navigate = useNavigate ();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({\r\n        type: AuthActionTypes.AuthActionTypes.CLEAR,\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    initialValues: registerState,\r\n    validationSchema: registerValidationSchema,\r\n    onSubmit: ({ username, email, password }) => {\r\n      createUser({ username, email, password }, navigate);\r\n    },\r\n  });\r\n\r\n  const handleClose = () => {\r\n    dispatch({\r\n      type: AuthActionTypes.AuthActionTypes.CLEAR,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Grid container justifyContent=\"center\">\r\n        <Grid item xs={8} sm={6} md={4}>\r\n          <form onSubmit={formik.handleSubmit} className={classes.form}>\r\n            <h1 className={classes.text}>Register</h1>\r\n            <TextField\r\n              className={classes.textField}\r\n              variant=\"outlined\"\r\n              label=\"Username\"\r\n              value={formik.values.username}\r\n              name=\"username\"\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.username && !!formik.errors.username}\r\n              helperText={formik.touched.username && formik.errors.username}\r\n            />\r\n            <TextField\r\n              className={classes.textField}\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              value={formik.values.email}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.email && !!formik.errors.email}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n            <TextField\r\n              className={classes.textField}\r\n              variant=\"outlined\"\r\n              label=\"Password\"\r\n              value={formik.values.password}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.password && !!formik.errors.password}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n            <TextField\r\n              className={classes.textField}\r\n              variant=\"outlined\"\r\n              label=\"ConfirmPassowrd\"\r\n              value={formik.values.confirmPassword}\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.confirmPassword &&\r\n                !!formik.errors.confirmPassword\r\n              }\r\n              helperText={\r\n                formik.touched.confirmPassword && formik.errors.confirmPassword\r\n              }\r\n            />\r\n            <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\r\n              <Typography className={classes.loginLink}>\r\n                Already have an account?\r\n              </Typography>\r\n            </Link>\r\n            {\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isLoading ? true : false}\r\n                className={classes.button}\r\n              >\r\n                {isLoading ? \"Loading...\" : \"Register\"}\r\n              </Button>\r\n            }\r\n          </form>\r\n        </Grid>\r\n        {error && (\r\n          <Snackbar\r\n            open={!!error}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n              {error}\r\n            </Alert>\r\n          </Snackbar>\r\n        )}\r\n        {success && (\r\n          <Snackbar\r\n            open={!!success}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              {success}\r\n            </Alert>\r\n          </Snackbar>\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    backgroundColor: \"#e8fffe\",\r\n    boxShadow: \"1px 1px 4px #e8e8e8\",\r\n    borderRadius: \"3px\",\r\n  },\r\n  textField: {\r\n    marginBottom: \"23px\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    marginBottom: \"27px\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#91ff5e\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"700\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#64ff24\",\r\n    },\r\n  },\r\n});\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react/no-unescaped-entities */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Snackbar,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\nimport { useFormik } from \"formik\";\r\nimport { RootState } from \"../../states/reducers/index\";\r\nimport { AuthActionTypes } from \"../../states/index\";\r\nimport { useStyles } from \"./styles\";\r\nimport * as yup from \"yup\";\r\nimport { usePassAction } from \"../../states/useActions/usePassAction\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst EnterEmail: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { enterNewPassword: resetPass } = usePassAction();\r\n  const navigate = useNavigate();\r\n  const { userId, token } = useParams() as { userId: string; token: string };\r\n  const dispatch = useDispatch();\r\n  const { error, isLoading, success } = useSelector(\r\n    (state: RootState) => state.pass\r\n  );\r\n  const formik = useFormik({\r\n    initialValues: { password: \"\", confirmPassword: \"\" },\r\n    validationSchema: yup.object({\r\n      password: yup\r\n        .string()\r\n        .min(6, \"Must be 6 characters or more\")\r\n        .required(\"Password is required\"),\r\n      confirmPassword: yup\r\n        .string()\r\n        .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\r\n        .required(\"Confirm-Password is required\"),\r\n    }),\r\n    onSubmit: ({ password }) => {\r\n      resetPass({ password }, userId, token, navigate);\r\n    },\r\n  });\r\n\r\n  const handleClose = () => {\r\n    if (error) {\r\n      dispatch({\r\n        type: AuthActionTypes.AuthActionTypes.ERROR,\r\n        payload: \"\",\r\n      });\r\n    }\r\n    if (success) {\r\n      dispatch({\r\n        type: AuthActionTypes.AuthActionTypes.LOG_IN_SUCCESS,\r\n        payload: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Grid container justifyContent=\"center\">\r\n        <Grid item xs={8} sm={6} md={4}>\r\n          <form onSubmit={formik.handleSubmit} className={classes.form}>\r\n            <h1 className={classes.text}>Reset Password</h1>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Password\"\r\n              value={formik.values.password}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={formik.handleChange}\r\n              className={classes.textField}\r\n              error={formik.touched.password && !!formik.errors.password}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Confirm Your Password\"\r\n              value={formik.values.confirmPassword}\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              onChange={formik.handleChange}\r\n              className={classes.textField}\r\n              error={\r\n                formik.touched.confirmPassword &&\r\n                !!formik.errors.confirmPassword\r\n              }\r\n              helperText={\r\n                formik.touched.confirmPassword && formik.errors.confirmPassword\r\n              }\r\n            />\r\n            <Button\r\n              className={classes.button}\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              disabled={isLoading ? true : false}\r\n            >\r\n              {isLoading ? \"Loading...\" : \"OK\"}\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        {error && (\r\n          <Snackbar\r\n            open={!!error}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n              {error}\r\n            </Alert>\r\n          </Snackbar>\r\n        )}\r\n        {success && (\r\n          <Snackbar\r\n            open={!!success}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              {success}\r\n            </Alert>\r\n          </Snackbar>\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EnterEmail;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoMain from \"./pages/todo/todo\";\nimport EnterEmail from \"./pages/enter-email/EnterEmail\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport { PrivateRoute } from \"./route/PrivateRoute\";\nimport Login from \"./pages/login/login\";\nimport Register from \"./pages/register/register\";\nimport EnterNewPassword from \"./pages/enter-new-password/EnterNewPassword\";\n\nfunction App(): JSX.Element {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/reset-password/enter-email\" element={<EnterEmail />} />\n        <Route\n          path=\"/reset-password/enter-new-password/:userId/:token\"\n          element={<EnterNewPassword />}\n        />\n        <Route path=\"/todo\" element={<PrivateRoute />}>\n          <Route path=\"/todo\" element={<TodoMain />} />\n        </Route>\n        <Route path=\"/todo/:accessToken\" element={<PrivateRoute />}>\n          <Route path=\"/todo/:accessToken\" element={<Navigate to=\"/todo\" />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { TodoActionTypes } from \"../action-types/todo\";\r\nimport { StateTodos } from \"../models/todo\";\r\nimport { TodoAction } from \"../actions/todo\";\r\n\r\nconst initialState: StateTodos = {\r\n  isLoading: false,\r\n  todoList: [],\r\n  error: \"\",\r\n};\r\n\r\nexport const todos = (state = initialState, action: TodoAction): StateTodos => {\r\n  switch (action.type) {\r\n    case TodoActionTypes.LOADING:\r\n      return {\r\n        todoList: [],\r\n        isLoading: true,\r\n        error: \"\",\r\n      };\r\n    case TodoActionTypes.FETCH_DATA_SUCCESS:\r\n      return {\r\n        todoList: action.payload,\r\n        isLoading: false,\r\n        error: \"\",\r\n      };\r\n\r\n    case TodoActionTypes.ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case TodoActionTypes.CREATE_TODO:\r\n      return {\r\n        ...state,\r\n        todoList: [...state.todoList, action.payload],\r\n      };\r\n\r\n    case TodoActionTypes.UPDATE_TODO:\r\n      return {\r\n        ...state,\r\n        todoList: state.todoList.map((todo) =>\r\n          todo.id === action.id\r\n            ? {\r\n                ...todo,\r\n                task: action.payload.task,\r\n                isCompleted: action.payload.isCompleted,\r\n              }\r\n            : todo\r\n        ),\r\n      };\r\n\r\n    case TodoActionTypes.DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todoList: state.todoList.filter((todo) => todo.id !== action.payload),\r\n      };\r\n\r\n    case TodoActionTypes.CLEAR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: \"\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { AuthActionTypes } from \"../action-types/auth\";\r\nimport { AuthAction } from \"../actions/auth\";\r\nimport { AuthState } from \"../models/auth\";\r\n\r\nconst initialState: AuthState = {\r\n  isAuthenticated: localStorage.getItem(\"token\") ? true : false,\r\n  username: \"\",\r\n  isLoading: false,\r\n  success: \"\",\r\n  error: \"\",\r\n};\r\n\r\nexport const auth = (state = initialState, action: AuthAction): AuthState => {\r\n  switch (action.type) {\r\n    case AuthActionTypes.LOADING:\r\n      return {\r\n        error: \"\",\r\n        success: \"\",\r\n        username: \"\",\r\n        isLoading: true,\r\n        isAuthenticated: false,\r\n      };\r\n\r\n    case AuthActionTypes.LOG_IN_SUCCESS:\r\n    case AuthActionTypes.LOG_OUT:\r\n    case AuthActionTypes.CLEAR:\r\n      return {\r\n        error: \"\",\r\n        success: \"\",\r\n        username: \"\",\r\n        isLoading: false,\r\n        isAuthenticated: false,\r\n      };\r\n\r\n    case AuthActionTypes.REGISTER_SUCCESS:\r\n      return {\r\n        success: action.payload,\r\n        isLoading: false,\r\n        error: \"\",\r\n        username: \"\",\r\n        isAuthenticated: false,\r\n      };\r\n\r\n    case AuthActionTypes.FETCH_PROFILE:\r\n      return {\r\n        error: \"\",\r\n        success: \"\",\r\n        isLoading: false,\r\n        username: action.payload,\r\n        isAuthenticated: true,\r\n      };\r\n\r\n    case AuthActionTypes.ERROR:\r\n      return {\r\n        success: \"\",\r\n        username: \"\",\r\n        isLoading: false,\r\n        error: action.payload,\r\n        isAuthenticated: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { StatePass } from \"../models/pass\";\r\nimport { PassAction } from \"../actions/pass\";\r\nimport { PassActionTypes } from \"../action-types/pass\";\r\n\r\nconst initialState: StatePass = {\r\n  isLoading: false,\r\n  success: \"\",\r\n  error: \"\",\r\n};\r\n\r\nexport const pass = (state = initialState, action: PassAction): StatePass => {\r\n  switch (action.type) {\r\n    case PassActionTypes.LOADING:\r\n      return {\r\n        isLoading: true,\r\n        success: \"\",\r\n        error: \"\",\r\n      };\r\n    case PassActionTypes.SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        success: action.payload,\r\n        error: \"\",\r\n      };\r\n\r\n    case PassActionTypes.ERROR:\r\n      return {\r\n        isLoading: false,\r\n        success: \"\",\r\n        error: action.payload,\r\n      };\r\n\r\n    case PassActionTypes.CLEAR:\r\n      return {\r\n        isLoading: false,\r\n        success: \"\",\r\n        error: \"\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { todos } from \"./todos\";\r\nimport { auth } from \"./auth\";\r\nimport { pass } from \"./password\";\r\n\r\nconst reducers = combineReducers({\r\n  todos,\r\n  auth,\r\n  pass,\r\n});\r\n\r\nexport default reducers;\r\n\r\nexport type RootState = ReturnType<typeof reducers>;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./states/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}